name: Build Debug APK (with Pro Video patch, robust logs)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove local.properties if present (breaks CI)
        run: |
          if [ -f local.properties ]; then git rm -f --cached local.properties || true; fi

      - name: Ensure Gradle wrapper (generate if missing)
        run: |
          if [ ! -f ./gradlew ]; then
            echo "Gradle wrapper missing; generating with Gradle 8.7"
            curl -sLo gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -q gradle.zip -d $HOME/gradle
            export PATH="$HOME/gradle/gradle-8.7/bin:$PATH"
            gradle wrapper --gradle-version 8.7
          fi
          chmod +x ./gradlew || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Helpful diagnostics (always captured)
      - name: Print Gradle & projects
        run: |
          ./gradlew --version | tee gradle-version.txt
          ./gradlew projects || true
          ./gradlew tasks --all || true

      - name: Show repo tree (top level)
        run: |
          ls -la
          echo "----"
          find . -maxdepth 2 -type d -print | sort > tree-top.txt
          head -n 200 tree-top.txt

      # Apply our Pro Video patch, but never block logs upload
      - name: Apply Pro Video patch
        id: patch
        continue-on-error: true
        run: |
          set -o pipefail
          mkdir -p logs
          python3 --version | tee logs/python-version.txt
          echo "Running patcher..."
          python3 scripts/apply_pro_video_patch.py 2>&1 | tee logs/patch-output.txt
          echo "Patch step finished (even if it reports issues)."

      # Build & capture full log; do NOT stop the job even on failure
      - name: Build Debug APK (skip Lint)
        id: buildstep
        continue-on-error: true
        run: |
          set -o pipefail
          ./gradlew --no-daemon --stacktrace assembleDebug -x lint 2>&1 | tee logs/build.log
          echo "Gradle exit code: $?"

      # If build failed, surface a short message in summary
      - name: Mark failure if needed
        if: steps.buildstep.outcome != 'success'
        run: |
          echo "::warning ::Build step failed; logs uploaded as artifact. See logs/build.log for 'What went wrong'."

      # Upload logs ALWAYS
      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: logs/

      # Upload APKs only on success
      - name: Upload APKs
        if: steps.buildstep.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: |
            **/build/outputs/apk/**/**/*.apk
            **/build/outputs/apk/**/*.apk
